/*
 * This file was generated by the Gradle "init" task.
 *
 * This generated file contains a sample Java project to get you started.
 * For more details take a look at the Java Quickstart chapter in the Gradle
 * User Manual available at https://docs.gradle.org/6.1.1/userguide/tutorial_java_projects.html
 */
buildscript {
    ext {
        springBootVersion = "2.2.5.RELEASE"
    }

    repositories {
        maven { url 'http://maven.aliyun.com/nexus/content/groups/public/' }
        maven{ url 'http://maven.aliyun.com/nexus/content/repositories/jcenter'}
    }

    dependencies {
        classpath "org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}"
    }
}

plugins {
    id "net.ltgt.apt" version "0.21"
    id "java"
    id "application"
    id "groovy"
    id "org.springframework.boot" version "2.2.5.RELEASE"
}

apply plugin: "io.spring.dependency-management"
apply plugin: 'net.ltgt.apt-idea'
apply from: "$rootDir/gradle/config/scripts/idea.gradle"

repositories {
    jcenter()
    mavenCentral()
    maven { url "http://repo.maven.apache.org/maven2" }
}

group = "com.thoughtworks.parkinglot"
version = "1.0.0-SNAPSHOT"
sourceCompatibility = JavaVersion.VERSION_11
targetCompatibility = JavaVersion.VERSION_11

ext {
    springBootVersion = "2.2.5.RELEASE"
    mapstructVersion = "1.3.0.Final"
    lombokVersion = "1.18.12"
    springfoxVersion = "2.9.2"
    assertJVersion = '3.11.1'
    mockitoVersion = '2.25.1'
    powerMockVersion = '2.0.5'
    archUnitVersion = "0.13.1"
}

dependencies {
    implementation "com.google.guava:guava:28.1-jre"
    implementation "org.springframework.boot:spring-boot-starter"
    implementation "org.springframework.boot:spring-boot-starter-web"
//    implementation "org.springframework.boot:spring-boot-starter-data-jpa"
    implementation "org.springframework.boot:spring-boot-starter-actuator"
    implementation "org.apache.commons:commons-lang3:3.9"
//    implementation "org.flywaydb:flyway-core"
    implementation "io.springfox:springfox-swagger2:$springfoxVersion"
    implementation "io.springfox:springfox-swagger-ui:$springfoxVersion"
    runtimeOnly "mysql:mysql-connector-java"
    runtimeOnly "com.h2database:h2"
    implementation("org.mapstruct:mapstruct:$mapstructVersion")
    annotationProcessor("org.mapstruct:mapstruct-processor:$mapstructVersion")
    compileOnly "org.projectlombok:lombok:$lombokVersion"
    annotationProcessor "org.projectlombok:lombok:$lombokVersion"

    testCompile "com.tngtech.archunit:archunit-junit4:$archUnitVersion"
    testImplementation "org.springframework.boot:spring-boot-starter-test"
    testImplementation "org.assertj:assertj-core:$assertJVersion"
    testImplementation "org.mockito:mockito-core:$mockitoVersion"
    testImplementation "org.powermock:powermock-module-junit4:$powerMockVersion"
    testImplementation "org.powermock:powermock-api-mockito2:$powerMockVersion"
    testImplementation "org.codehaus.groovy:groovy-all:2.5.8"
    testImplementation "org.spockframework:spock-core:1.3-groovy-2.5"
    testImplementation "junit:junit:4.12"
}

apply from: "$rootDir/gradle/config/scripts/style.gradle"
apply from: "$rootDir/gradle/config/scripts/coverage.gradle"
apply from: "$rootDir/gradle/config/scripts/sonar-dependency.gradle"

application {
    mainClassName = "com.thoughtworks.parkinglot.Application"
}

bootJar {
    enabled = false
}

jar {
    enabled = true
}

compileJava {
    options.compilerArgs = [
            '-Amapstruct.suppressGeneratorTimestamp=true',
            '-Amapstruct.suppressGeneratorVersionInfoComment=true',
            '-Amapstruct.defaultComponentModel=spring'
    ]
}

coverage {
    excludePackages = [
            "**/dto/**",
            "**/response/**",
            "**/mapper/**",
            "**/repository/**",
            "**/common/**",
            "**/config/**",
            "**/exception/**",
            "**/api/**",
            "**/Application.java"
    ]
    excludeClasses = [
            "**/dto/**",
            "**/response/**",
            "**/mapper/**",
            "**/repository/**",
            "**/common/**",
            "**/config/**",
            "**/exception/**",
            "**/api/**",
            "**/Application.java"
    ]
}
