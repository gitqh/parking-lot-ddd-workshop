@startuml parkinglot
skinparam Shadowing false
skinparam class {
    BackgroundColor PaleTurquoise 
    ArrowColor SeaGreen
}

package parkingcontext <<Core SubDomain>> {
    package parking {
        interface FindParkingLotService {
            findParkingLot(ParkingLotFinderSpecification): ParkingLot 
        }
        interface ParkingLotFinderSpecification {
            newParkingLotFinder(): ParkingLotFinder 
        }
        interface ParkingLotFinder {
            findParkingLotToPark(): ParkingLot 
        }
        class ParkingLot <<Aggregate Root>> {
            id: ParkingLotId 
            ticketToCarMap: Map<TicketId, Car> 
            --
            park(Car car): Ticket 
            pick(TicketId ticketId): Car 
        }
        class Ticket <<Value Object>> {
            licensePlate: String 
            parkingLotId: ParkingLotId 
        }
        class Car <<Value Object>> {
            licensePlate: String 
        }
        FindParkingLotService .down.> ParkingLotFinderSpecification
        ParkingLot "1" *-down-> "many" Ticket
        ParkingLot "1" -right-> "many" Car
        ParkingLot --left[hidden] Car
    }

    package finder {
        class ParkingManagerSpecification {
            newParkingLotFinder(): ParkingLotFinder 
        }
        class ParkingBoySpecification {
            parkingBoyConfigId: ParkingBoyId 
            --
            newParkingLotFinder(): ParkingLotFinder 
        }
        class ParkingBoy <<Value Object>> {
            name: String 
            parkingLots: List<ParkingLot> 
            parkingPolicy: ParkingPolicy 
            --
            find(): Optional<ParkingLot> 
        }
        class ParkingManager <<Value Object>> {
            name: String 
            parkingBoys: List<ParkingBoy> 
            --
            listParkingLotIds(): List<ParkingLot> 
            findParkingLot(): Optional<ParkingLot> 
        }
        interface ParkingPolicy {
            findParkingLotToPark(Collection<ParkingLot> parkingLots): ParkingLot 
        }
        ParkingManagerSpecification -up-|> ParkingLotFinderSpecification
        ParkingBoySpecification -up-|> ParkingLotFinderSpecification
        ParkingManager -up-|> ParkingLotFinder
        ParkingBoy -up-|> ParkingLotFinder
        ParkingManager *-left-> ParkingBoy
        ParkingBoy *--> ParkingPolicy
    }

    package policy {
        class SeniorParkingPolicy <<Value Object>> {
            findParkingLotToPark(Collection<ParkingLot> parkingLots): ParkingLot 
        }
        class JuniorParkingPolicy <<Value Object>> {
            findParkingLotToPark(Collection<ParkingLot> parkingLots): ParkingLot 
        }
        SeniorParkingPolicy -up-|> ParkingPolicy
        JuniorParkingPolicy -up-|> ParkingPolicy
    }
}

package configcontext <<Support SubDomain>> {
  package parkingmanagerconfig {
      class ParkingManagerConfig <<Aggregate Root>> {
          id: ParkingManagerConfigId 
          parkingBoyIds: List<ParkingBoyConfigId> 
    }
  }
  
  package parkingboyconfig {
      class ParkingBoyConfig <<Aggregate Root>> {
            id: ParkingBoyConfigId 
            parkingLotIds: List<ParkingLotId> 
            name: ParkingPolicyName 
      }
    enum ParkingPolicyEnum <<Value Object>>
    ParkingBoyConfig --> ParkingPolicyEnum
  }
  ParkingManagerConfig --[hidden] ParkingBoyConfig
}

@enduml