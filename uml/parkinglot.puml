@startuml parkinglot
skinparam Shadowing false
skinparam class {
    BackgroundColor PaleTurquoise 
    ArrowCollor SeaGreen
}

package service <<Domain Service>> {
    class ParkingManager {
        -ParkingLotRepository parkingLotRepository
        -ParkingBoyRepository parkingBoyRepositoy
        +Optional<ParkingLot> find
    }
}

package parkingboy <<Aggregate>> {
    class ParkingBoy <<Entity>> <<Aggregate Root>>{
        -ParkingBoyId id
        -List<String> parkingLotIds
        -ParkingStrategy ParkingStrategy
        --
        +Ticket park(String carId)
    }

    interface ParkingStrategy  {
        Optional<ParkingLot> find(List<ParkingLot> parkingLots)
    }

    class NaturalParkingStrategy <<Value Object>> {
        +Optional<ParkingLot> find(List<ParkingLot> parkingLots)
    }

    class MaxSpaceParkingStrategy <<Value Object>> {
        +Optional<ParkingLot> find(List<ParkingLot> parkingLots)
    }

    interface ParkingBoyRepository {
        +List<ParkingBoy> findAll()
    }

    ParkingBoy o-> ParkingStrategy
    NaturalParkingStrategy ..|> ParkingStrategy
    MaxSpaceParkingStrategy ..|> ParkingStrategy
    ParkingManager o--> ParkingBoyRepository
}


package parkinglot <<Aggregate>> {
    class ParkingLot <<Entity>> <<Aggregate Root>> {
        -ParkingLotId id
        -Map<TicketId, Car> ticketToCarMap
        --
        +Ticket park(Car car)
        +Car pick(TicketId ticketId)
    }

    class Ticket <<Entity>> {
        -TicketId id
        -String licensePlate
        -String parkingLotId
    }

    class Car <<Value Object>> {
        -String licensePlate
    }

    interface ParkingLotRepository {
        +Optional<ParkingLot> findById(ParkingLotId parkingLotId)
    }

    ParkingLot "1" o-- "1..*" Ticket
    ParkingLot "1" -> "1..*" Car
    ParkingManager o--> ParkingLotRepository
}

ParkingBoy "1" o-- "1..*" ParkingLot

@enduml